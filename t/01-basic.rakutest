use Test;
use Trap;

plan 6;

my $out;
my $err;
{   # separate capturing
    $out = Trap(my $*OUT);
    $err = Trap(my $*ERR);
    say "Hello world!";
    note "Goodbye!"
}
is $out.text, "Hello world!\n", 'is out text ok';
is $err.text, "Goodbye!\n",     'is err text ok';

my $merged;
{   # merged capturing
    $merged = Trap(my $*OUT, my $*ERR, :tee<OUT>);
    put "Hello world!";
    note "Goodbye!"
}
is $merged.text, "Hello world!\nGoodbye!\n", 'is merged text ok';

my $new;
{   # creating the object manually
    $new = my $*OUT = Trap.new(:tee<ERR>);
    print "Hello world!";
}
is $new.text, 'Hello world!', 'is new text ok';

# Legacay raku tests for coverage
my $trap = Trap.new;
$trap.say("foo","bar","baz");
is $trap.text, "foobarbaz\n", "did say capture the text";

$trap = Trap.new;
$trap.printf("%04d",42);
is $trap.text, "0042", "did 'printf' capture the text";

# vim: expandtab shiftwidth=4
